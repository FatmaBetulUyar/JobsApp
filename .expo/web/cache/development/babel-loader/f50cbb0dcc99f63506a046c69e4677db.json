{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/fatmabetuluyar/Downloads/firebase-push-notification-recipes-app/src/navigations/AppNavigation.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport CategoriesScreen from \"../screens/Categories/CategoriesScreen\";\nimport RecipeScreen from \"../screens/Recipe/RecipeScreen\";\nimport RecipesListScreen from \"../screens/RecipesList/RecipesListScreen\";\nimport DrawerContainer from \"../screens/DrawerContainer/DrawerContainer\";\nimport IngredientScreen from \"../screens/Ingredient/IngredientScreen\";\nimport SearchScreen from \"../screens/Search/SearchScreen\";\nimport IngredientsDetailsScreen from \"../screens/IngredientsDetails/IngredientsDetailsScreen\";\nimport ImagePickerExample from \"../screens/Camera/CameraScreen\";\nimport AddRecipeScreen from \"../screens/AddRecipe/AddRecipeScreen\";\nimport PushNotification from \"../screens/Notification/Notification\";\nimport LoginRegister from \"../screens/LoginRegister/LoginRegister\";\nimport { connectStorageEmulator } from '@firebase/storage';\nvar Stack = createStackNavigator();\n\nfunction MainNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        alignSelf: 'center',\n        flex: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Camera\",\n    component: ImagePickerExample,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AddRecipe\",\n    component: AddRecipeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PushNotification\",\n    component: PushNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Categories\",\n    component: CategoriesScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recipe\",\n    component: RecipeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecipesList\",\n    component: RecipesListScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Ingredient\",\n    component: IngredientScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"IngredientsDetails\",\n    component: IngredientsDetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction DrawerStack(props) {\n  var _this = this;\n\n  var setAuth = props.setAuth;\n  return React.createElement(Drawer.Navigator, {\n    drawerPosition: \"left\",\n    initialRouteName: \"Main\",\n    drawerStyle: {\n      width: 250\n    },\n    screenOptions: {\n      headerShown: false\n    },\n    drawerContent: function drawerContent(_ref) {\n      var navigation = _ref.navigation;\n      return React.createElement(DrawerContainer, {\n        setAuth: setAuth,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 39\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Main\",\n    component: MainNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function AppContainer() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      auth = _useState2[0],\n      setAuth = _useState2[1];\n\n  return auth == true ? React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(DrawerStack, {\n    setAuth: setAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  })) : React.createElement(LoginRegister, {\n    setAuth: setAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  });\n}\nconsole.disableYellowBox = true;","map":{"version":3,"sources":["/Users/fatmabetuluyar/Downloads/firebase-push-notification-recipes-app/src/navigations/AppNavigation.js"],"names":["React","useState","createStackNavigator","NavigationContainer","createDrawerNavigator","HomeScreen","CategoriesScreen","RecipeScreen","RecipesListScreen","DrawerContainer","IngredientScreen","SearchScreen","IngredientsDetailsScreen","ImagePickerExample","AddRecipeScreen","PushNotification","LoginRegister","connectStorageEmulator","Stack","MainNavigator","headerTitleStyle","fontWeight","textAlign","alignSelf","flex","Drawer","DrawerStack","props","setAuth","width","headerShown","navigation","AppContainer","auth","console","disableYellowBox"],"mappings":"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","sourcesContent":["import React, { useState} from 'react'\nimport {Text,View} from 'react-native';\nimport {createStackNavigator} from '@react-navigation/stack'\nimport {NavigationContainer} from '@react-navigation/native'\nimport {createDrawerNavigator} from '@react-navigation/drawer' \nimport HomeScreen from '../screens/Home/HomeScreen';\nimport CategoriesScreen from '../screens/Categories/CategoriesScreen';\nimport RecipeScreen from '../screens/Recipe/RecipeScreen';\nimport RecipesListScreen from '../screens/RecipesList/RecipesListScreen';\nimport DrawerContainer from '../screens/DrawerContainer/DrawerContainer';\nimport IngredientScreen from '../screens/Ingredient/IngredientScreen';\nimport SearchScreen from '../screens/Search/SearchScreen';\nimport IngredientsDetailsScreen from '../screens/IngredientsDetails/IngredientsDetailsScreen';\nimport ImagePickerExample from '../screens/Camera/CameraScreen'\nimport AddRecipeScreen from '../screens/AddRecipe/AddRecipeScreen';\nimport PushNotification from '../screens/Notification/Notification';\nimport LoginRegister from '../screens/LoginRegister/LoginRegister';\nimport { connectStorageEmulator } from '@firebase/storage';\n\nconst Stack = createStackNavigator();\n\nfunction MainNavigator() {\n  return(\n    <Stack.Navigator\n      screenOptions={{\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            textAlign: 'center',\n            alignSelf: 'center',\n            flex: 1,\n          }\n      }}\n    >\n      <Stack.Screen name='Home' component={HomeScreen} />\n      <Stack.Screen name='Camera' component={ImagePickerExample} />\n      <Stack.Screen name='AddRecipe' component={AddRecipeScreen} />\n      <Stack.Screen name='PushNotification' component={PushNotification} />\n      <Stack.Screen name='Categories' component={CategoriesScreen}/>\n      <Stack.Screen name='Recipe' component={RecipeScreen}/>\n      <Stack.Screen name='RecipesList' component={RecipesListScreen} />\n      <Stack.Screen name='Ingredient' component={IngredientScreen} />\n      <Stack.Screen name='Search' component={SearchScreen} />\n      <Stack.Screen name='IngredientsDetails' component={IngredientsDetailsScreen} />\n    </Stack.Navigator>\n  )\n} \n\n// function AuthNavigator(auth, setAuth) {\n//   console.log(\"test\");\n//   console.log(auth)\n//   return(\n//     <Stack.Navigator\n//       screenOptions={{\n//           headerTitleStyle: {\n//             fontWeight: 'bold',\n//             textAlign: 'center',\n//             alignSelf: 'center',\n//             flex: 1,\n//           }\n//       }}\n//     >\n//       <Stack.Screen name='Register' component={Register} initialParams={{setAuth}} />\n//       <Stack.Screen name='Login' component={Login} initialParams={{setLogin : setAuth}}/>\n//     </Stack.Navigator>\n//   )\n// } \n\nconst Drawer = createDrawerNavigator();\n\nfunction DrawerStack(props) {\n  const {setAuth} = props;\n  return(\n    <Drawer.Navigator\n      drawerPosition='left'\n      initialRouteName='Main'\n      drawerStyle={{\n        width: 250\n      }}\n      screenOptions={{headerShown: false}}\n      drawerContent={({navigation})=> <DrawerContainer setAuth={setAuth} navigation={navigation}/>}\n    >\n      {/* drawerContent={({navigation})=> <DrawerContainer auth={auth} navigation={navigation}/>} */}\n      <Drawer.Screen name='Main' component={MainNavigator} /> \n      {/* {\n        auth == true ? <Drawer.Screen name='Main' component={MainNavigator} /> : <Drawer.Screen name='Main' component={() => <AuthNavigator data={auth,setAuth}/>} />\n      } */}\n      \n    </Drawer.Navigator>\n  )\n} \n\n export default function AppContainer() {\n  const [auth, setAuth] = useState(false); \n\n  return(\n    auth == true \n    ? <NavigationContainer>\n      <DrawerStack setAuth={setAuth}/>\n    </NavigationContainer>\n    : <LoginRegister setAuth={setAuth}></LoginRegister>\n  )\n} \n \n\nconsole.disableYellowBox = true;"]},"metadata":{},"sourceType":"module"}