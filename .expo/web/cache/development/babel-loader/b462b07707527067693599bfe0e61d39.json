{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/fatmabetuluyar/Downloads/firebase-push-notification-recipes-app/src/screens/Home/HomeScreen.js\";\nimport React, { useLayoutEffect, useState, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName } from \"../../data/MockDataAPI\";\nimport _default from \"expo-constants\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { firestoreDb } from \"../../FirebaseConfig\";\nexport default function HomeScreen(props) {\n  var _this = this;\n\n  var navigation = props.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myRecipe = _useState2[0],\n      setMyRecipes = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.photo_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, getCategoryName(item.categoryId))));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    renderItem: renderRecipes,\n    data: myRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/fatmabetuluyar/Downloads/firebase-push-notification-recipes-app/src/screens/Home/HomeScreen.js"],"names":["React","useLayoutEffect","useState","useEffect","styles","MenuImage","getCategoryName","_default","collection","getDocs","firestoreDb","HomeScreen","props","navigation","myRecipe","setMyRecipes","setOptions","headerLeft","openDrawer","headerRight","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","photo_url","title","category","categoryId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,EAA2CC,SAA3C,QAA2D,OAA3D;;;;;;;AAEA,OAAOC,MAAP;AAEA,OAAOC,SAAP;AACA,SAASC,eAAT;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,WAAT;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAA,MAChCC,UADgC,GACjBD,KADiB,CAChCC,UADgC;;AAAA,kBAEPX,QAAQ,CAAC,EAAD,CAFD;AAAA;AAAA,MAEjCY,QAFiC;AAAA,MAEvBC,YAFuB;;AAmBxCd,EAAAA,eAAe,CAAC,YAAM;AACpBY,IAAAA,UAAU,CAACG,UAAX,CAAsB;AACpBC,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,SAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbJ,YAAAA,UAAU,CAACK,UAAX;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA,OADQ;AAQpBC,MAAAA,WAAW,EAAE;AAAA,eAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AARO,KAAtB;AAUD,GAXc,EAWZ,EAXY,CAAf;;AAaA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9BR,IAAAA,UAAU,CAACS,QAAX,CAAoB,QAApB,EAA8B;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAA9B;AACD,GAFD;;AAIA,MAAME,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGF,IAAH,QAAGA,IAAH;AAAA,WACpB,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAC,qBAAlC;AAAwD,MAAA,OAAO,EAAE;AAAA,eAAMD,aAAa,CAACC,IAAD,CAAnB;AAAA,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjB,MAAM,CAACoB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEpB,MAAM,CAACqB,KAArB;AAA4B,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAGL,IAAI,CAACM;AAAb,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEvB,MAAM,CAACwB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BP,IAAI,CAACO,KAAjC,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAExB,MAAM,CAACyB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BvB,eAAe,CAACe,IAAI,CAACS,UAAN,CAA9C,CAHF,CADF,CADoB;AAAA,GAAtB;;AAUA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AACC,IAAA,4BAA4B,EAAE,KAD/B;AAEC,IAAA,UAAU,EAAE,CAFb;AAGC,IAAA,UAAU,EAAEP,aAHb;AAIC,IAAA,IAAI,EAAET,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF;AAUD","sourcesContent":["import React, { useLayoutEffect, useState, useEffect} from \"react\";\nimport { FlatList, Button, Text, View, TouchableHighlight, Image } from \"react-native\";\nimport styles from \"./styles\";\n//import { recipes } from \"../../data/dataArrays\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName } from \"../../data/MockDataAPI\";\nimport _default from \"expo-constants\";\n\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { firestoreDb } from '../../FirebaseConfig'\n\nexport default function HomeScreen(props) {\n  const { navigation } = props;\n  const [myRecipe, setMyRecipes] = useState([]);\n\n  // useEffect(() => {\n  //   async function fetchRepices(){\n  //     const querySnapshot = await getDocs(collection(firestoreDb, \"recipes\"));\n\n  //     var data = [];\n  //     querySnapshot.forEach(async (doc) => {\n  //       data.push(doc.data());\n  //     });\n  \n  //     setMyRecipes(data);   \n  //   }\n\n  //   fetchRepices()\n  // })\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n  \n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: (item.photo_url) }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n     <FlatList vertical \n      showsVerticalScrollIndicator={false} \n      numColumns={2} \n      renderItem={renderRecipes} \n      data={myRecipe} \n      ></FlatList>\n    </View> \n  );\n}\n"]},"metadata":{},"sourceType":"module"}